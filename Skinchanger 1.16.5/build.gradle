buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven {
            
            name 'Sponge / Mixin Maven'
            url 'https://repo.spongepowered.org/repository/maven-public/'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.apache.httpcomponents:httpclient:4.5.13'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish' 
apply plugin: 'eclipse'

version = "${mod_version}"
archivesBaseName = "${mod_name}-${minecraft_version}"
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {

    mappings channel: 'snapshot', version: "${mcp_version}".toString()
	
    if (project.hasProperty('mod_at')) {
    
        accessTransformer = file(findProperty('mod_at'))
    }
	
    runs {
        client {
		
            workingDirectory project.file('run')
			taskName "${mod_name}".replaceAll("\\s","") + 'Client'
            property 'forge.logging.console.level', 'debug'
            property 'terminal.ansi', 'true'           
            arg "-mixin.config=" + project.findProperty('mixin_id') + ".mixins.json"
            jvmArg "-Dmixin.env.disableRefMap=true"
            
            mods {
                enchdesc {
                    source sourceSets.main
                }
            }
        }

        server {
        
            workingDirectory project.file('run')
			taskName "${mod_name}".replaceAll("\\s","") + 'Server'
			property 'forge.logging.console.level', 'debug'
            property 'terminal.ansi', 'true'
            arg "-mixin.config=" + project.findProperty('mixin_id') + ".mixins.json"
            jvmArg "-Dmixin.env.disableRefMap=true"
            
            mods {
                enchdesc {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {

    maven {

        url 'https://maven.blamejared.com/'
    }
    
    maven {

        url 'https://dvs1.progwml6.com/files/maven'
    }
    
    maven {
        url 'https://www.cursemaven.com'
    }
}

dependencies {
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    minecraft "net.minecraftforge:forge:${forge_version}"
}

jar {
    manifest {
        attributes([
            'Timestamp': System.currentTimeMillis(),
            'Specification-Title': "${mod_name}",
            'Specification-Vendor': "${mod_vendor}",
            'Specification-Version': "${version}",
            'Implementation-Title': project.archivesBaseName,
            'Implementation-Version': project.version,
            'Implementation-Vendor' :"${mod_vendor}",
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
            'Built-On': "${forge_version}",
            "MixinConfigs": "${mixin_id}.mixins.json"
        ])
    }
}


processResources {

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
    }

    from(sourceSets.main.resources.srcDirs) {
    
        exclude 'META-INF/mods.toml'
    }
}

apply plugin: 'org.spongepowered.mixin'

mixin {

    add sourceSets.main, "${mixin_id}.refmap.json"
}